// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PropertyRenumbering.Data;

#nullable disable

namespace PropertyRenumbering.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240415185652_ModifyExistingDetailsTable")]
    partial class ModifyExistingDetailsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PropertyRenumbering.Models.AllocationType", b =>
                {
                    b.Property<int>("AllocationTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AllocationTypeId"));

                    b.Property<string>("AllocationTypeInitial")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("AllocationTypes")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("AllocationTypeId");

                    b.HasIndex("AllocationTypeInitial", "AllocationTypes")
                        .IsUnique();

                    b.ToTable("AllocationTypes");

                    b.HasData(
                        new
                        {
                            AllocationTypeId = 1,
                            AllocationTypeInitial = "DTA",
                            AllocationTypes = "DIRECT ALLOCATION"
                        },
                        new
                        {
                            AllocationTypeId = 2,
                            AllocationTypeInitial = "DTR",
                            AllocationTypes = "DIRECT RENT"
                        },
                        new
                        {
                            AllocationTypeId = 3,
                            AllocationTypeInitial = "RGU",
                            AllocationTypes = "REGULARIZATION"
                        },
                        new
                        {
                            AllocationTypeId = 4,
                            AllocationTypeInitial = "DPA",
                            AllocationTypes = "DUTY POST ALLOCATION"
                        },
                        new
                        {
                            AllocationTypeId = 5,
                            AllocationTypeInitial = "TTC",
                            AllocationTypes = "TEMA TRADITIONAL COUNCIL"
                        },
                        new
                        {
                            AllocationTypeId = 6,
                            AllocationTypeInitial = "NTC",
                            AllocationTypes = "NUNGUA TRADITIONAL COUNCIL"
                        },
                        new
                        {
                            AllocationTypeId = 7,
                            AllocationTypeInitial = "KTC",
                            AllocationTypes = "KPONE TRADITIONAL COUNCIL"
                        });
                });

            modelBuilder.Entity("PropertyRenumbering.Models.Blocks", b =>
                {
                    b.Property<int>("BlockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlockId"));

                    b.Property<string>("Block")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlockId");

                    b.ToTable("Blocks");
                });

            modelBuilder.Entity("PropertyRenumbering.Models.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyId"));

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("PropertyRenumbering.Models.ExistingDetails", b =>
                {
                    b.Property<string>("OldPropertyNumber")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("LocalityId")
                        .HasColumnType("int");

                    b.Property<int>("Renumbered")
                        .HasColumnType("int");

                    b.HasKey("OldPropertyNumber");

                    b.ToTable("ExistingDetails");
                });

            modelBuilder.Entity("PropertyRenumbering.Models.LandUse", b =>
                {
                    b.Property<int>("LandUseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LandUseId"));

                    b.Property<string>("LandUseInitial")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("LandUseName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LandUseId");

                    b.HasIndex("LandUseInitial", "LandUseName")
                        .IsUnique();

                    b.ToTable("LandUses");

                    b.HasData(
                        new
                        {
                            LandUseId = 1,
                            LandUseInitial = "RPL",
                            LandUseName = "RESIDENTIAL"
                        },
                        new
                        {
                            LandUseId = 2,
                            LandUseInitial = "HOS",
                            LandUseName = "HOUSE OWNERSHIP SCHEME"
                        },
                        new
                        {
                            LandUseId = 3,
                            LandUseInitial = "LSD",
                            LandUseName = "LARGE SCALE DEVELOPMENT"
                        },
                        new
                        {
                            LandUseId = 4,
                            LandUseInitial = "HSE",
                            LandUseName = "HOUSE"
                        },
                        new
                        {
                            LandUseId = 5,
                            LandUseInitial = "FLT",
                            LandUseName = "FLAT"
                        },
                        new
                        {
                            LandUseId = 6,
                            LandUseInitial = "CPL",
                            LandUseName = "COMMERCIAL"
                        },
                        new
                        {
                            LandUseId = 7,
                            LandUseInitial = "SHP",
                            LandUseName = "SHOPS & OFFICES"
                        },
                        new
                        {
                            LandUseId = 8,
                            LandUseInitial = "LIC",
                            LandUseName = "LICENSE"
                        },
                        new
                        {
                            LandUseId = 9,
                            LandUseInitial = "IND",
                            LandUseName = "INDUSTRIAL"
                        },
                        new
                        {
                            LandUseId = 10,
                            LandUseInitial = "EMT",
                            LandUseName = "EASEMENT"
                        },
                        new
                        {
                            LandUseId = 11,
                            LandUseInitial = "INS",
                            LandUseName = "INSTITUTIONAL"
                        },
                        new
                        {
                            LandUseId = 12,
                            LandUseInitial = "REC",
                            LandUseName = "RECREATIONAL"
                        });
                });

            modelBuilder.Entity("PropertyRenumbering.Models.LandUseType", b =>
                {
                    b.Property<int>("LandUseTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LandUseTypeId"));

                    b.Property<int>("LandUseId")
                        .HasColumnType("int");

                    b.Property<string>("LandUseTypeInitial")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("LandUseTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LandUseTypeId");

                    b.HasIndex("LandUseId");

                    b.HasIndex("LandUseTypeInitial", "LandUseTypeName")
                        .IsUnique();

                    b.ToTable("LandUseTypes");

                    b.HasData(
                        new
                        {
                            LandUseTypeId = 1,
                            LandUseId = 1,
                            LandUseTypeInitial = "",
                            LandUseTypeName = "TDC BUILT HOUSES (HOS)"
                        },
                        new
                        {
                            LandUseTypeId = 2,
                            LandUseId = 1,
                            LandUseTypeInitial = "",
                            LandUseTypeName = "LESSEE BUILT HOUSES"
                        },
                        new
                        {
                            LandUseTypeId = 3,
                            LandUseId = 1,
                            LandUseTypeInitial = "",
                            LandUseTypeName = "APARTMENTS"
                        },
                        new
                        {
                            LandUseTypeId = 4,
                            LandUseId = 1,
                            LandUseTypeInitial = "",
                            LandUseTypeName = "HOUSES BY ESTATE DEVELOPERS"
                        },
                        new
                        {
                            LandUseTypeId = 5,
                            LandUseId = 6,
                            LandUseTypeInitial = "SHP",
                            LandUseTypeName = "SHOPS & OFFICES"
                        },
                        new
                        {
                            LandUseTypeId = 6,
                            LandUseId = 6,
                            LandUseTypeInitial = "RES",
                            LandUseTypeName = "RESTAURANTS & PUS"
                        },
                        new
                        {
                            LandUseTypeId = 7,
                            LandUseId = 6,
                            LandUseTypeInitial = "HTL",
                            LandUseTypeName = "GUEST HOUSE & HOTELS"
                        },
                        new
                        {
                            LandUseTypeId = 8,
                            LandUseId = 6,
                            LandUseTypeInitial = "PFS",
                            LandUseTypeName = "PETROL FILLING STATION"
                        },
                        new
                        {
                            LandUseTypeId = 9,
                            LandUseId = 6,
                            LandUseTypeInitial = "EVT",
                            LandUseTypeName = "EVENT CENTRES"
                        },
                        new
                        {
                            LandUseTypeId = 10,
                            LandUseId = 6,
                            LandUseTypeInitial = "CLH",
                            LandUseTypeName = "CLUB HOUSES"
                        },
                        new
                        {
                            LandUseTypeId = 11,
                            LandUseId = 6,
                            LandUseTypeInitial = "WHB",
                            LandUseTypeName = "WASHING BAY"
                        },
                        new
                        {
                            LandUseTypeId = 12,
                            LandUseId = 6,
                            LandUseTypeInitial = "CMS",
                            LandUseTypeName = "CORN MILL SITE"
                        },
                        new
                        {
                            LandUseTypeId = 13,
                            LandUseId = 6,
                            LandUseTypeInitial = "LIC",
                            LandUseTypeName = "LICENSE"
                        },
                        new
                        {
                            LandUseTypeId = 14,
                            LandUseId = 9,
                            LandUseTypeInitial = "HIA",
                            LandUseTypeName = "HEAVY INDUSTRIAL ACTIVITIES"
                        },
                        new
                        {
                            LandUseTypeId = 15,
                            LandUseId = 9,
                            LandUseTypeInitial = "LIA",
                            LandUseTypeName = "LIGHT INDUSTRIAL ACTIVITIES"
                        },
                        new
                        {
                            LandUseTypeId = 16,
                            LandUseId = 9,
                            LandUseTypeInitial = "AGR",
                            LandUseTypeName = "AGRO INDUSTRIAL ACTIVITIES"
                        },
                        new
                        {
                            LandUseTypeId = 17,
                            LandUseId = 9,
                            LandUseTypeInitial = "EMT",
                            LandUseTypeName = "EASEMENT"
                        },
                        new
                        {
                            LandUseTypeId = 18,
                            LandUseId = 11,
                            LandUseTypeInitial = "SCH",
                            LandUseTypeName = "SCHOOLS"
                        },
                        new
                        {
                            LandUseTypeId = 19,
                            LandUseId = 11,
                            LandUseTypeInitial = "CHU",
                            LandUseTypeName = "CHURCHES"
                        },
                        new
                        {
                            LandUseTypeId = 20,
                            LandUseId = 11,
                            LandUseTypeInitial = "MOS",
                            LandUseTypeName = "MOSQUES"
                        },
                        new
                        {
                            LandUseTypeId = 21,
                            LandUseId = 11,
                            LandUseTypeInitial = "LIB",
                            LandUseTypeName = "LIBRARY"
                        },
                        new
                        {
                            LandUseTypeId = 22,
                            LandUseId = 11,
                            LandUseTypeInitial = "PUB",
                            LandUseTypeName = "PUBLIC INSTITUTIONS"
                        },
                        new
                        {
                            LandUseTypeId = 23,
                            LandUseId = 11,
                            LandUseTypeInitial = "CLI",
                            LandUseTypeName = "CLINICS & HOSPITALS"
                        },
                        new
                        {
                            LandUseTypeId = 24,
                            LandUseId = 12,
                            LandUseTypeInitial = "GOC",
                            LandUseTypeName = "GOLF COURSE"
                        },
                        new
                        {
                            LandUseTypeId = 25,
                            LandUseId = 12,
                            LandUseTypeInitial = "PLG",
                            LandUseTypeName = "PLAYGROUND"
                        },
                        new
                        {
                            LandUseTypeId = 26,
                            LandUseId = 12,
                            LandUseTypeInitial = "HOR",
                            LandUseTypeName = "HORTICULTURE"
                        });
                });

            modelBuilder.Entity("PropertyRenumbering.Models.Locality", b =>
                {
                    b.Property<int>("LocalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocalityId"));

                    b.Property<string>("LocalityInitial")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LocalityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LocalityId");

                    b.HasIndex("LocalityInitial", "LocalityName")
                        .IsUnique();

                    b.ToTable("Localities");

                    b.HasData(
                        new
                        {
                            LocalityId = 1,
                            LocalityInitial = "C01",
                            LocalityName = "COMMUNITY 1"
                        },
                        new
                        {
                            LocalityId = 2,
                            LocalityInitial = "C02",
                            LocalityName = "COMMUNITY 2"
                        },
                        new
                        {
                            LocalityId = 3,
                            LocalityInitial = "C03",
                            LocalityName = "COMMUNITY 3"
                        },
                        new
                        {
                            LocalityId = 4,
                            LocalityInitial = "C04",
                            LocalityName = "COMMUNITY 4"
                        },
                        new
                        {
                            LocalityId = 5,
                            LocalityInitial = "C05",
                            LocalityName = "COMMUNITY 5"
                        },
                        new
                        {
                            LocalityId = 6,
                            LocalityInitial = "C06",
                            LocalityName = "COMMUNITY 6"
                        },
                        new
                        {
                            LocalityId = 7,
                            LocalityInitial = "C07",
                            LocalityName = "COMMUNITY 7"
                        },
                        new
                        {
                            LocalityId = 8,
                            LocalityInitial = "C08",
                            LocalityName = "COMMUNITY 8"
                        },
                        new
                        {
                            LocalityId = 9,
                            LocalityInitial = "C09",
                            LocalityName = "COMMUNITY 9"
                        },
                        new
                        {
                            LocalityId = 10,
                            LocalityInitial = "C10",
                            LocalityName = "COMMUNITY 10"
                        },
                        new
                        {
                            LocalityId = 11,
                            LocalityInitial = "C11",
                            LocalityName = "COMMUNITY 11"
                        },
                        new
                        {
                            LocalityId = 12,
                            LocalityInitial = "C12",
                            LocalityName = "COMMUNITY 12"
                        },
                        new
                        {
                            LocalityId = 13,
                            LocalityInitial = "C13",
                            LocalityName = "COMMUNITY 13"
                        },
                        new
                        {
                            LocalityId = 14,
                            LocalityInitial = "C14",
                            LocalityName = "COMMUNITY 14"
                        },
                        new
                        {
                            LocalityId = 15,
                            LocalityInitial = "C15",
                            LocalityName = "COMMUNITY 15"
                        },
                        new
                        {
                            LocalityId = 16,
                            LocalityInitial = "C16",
                            LocalityName = "COMMUNITY 16"
                        },
                        new
                        {
                            LocalityId = 17,
                            LocalityInitial = "C17",
                            LocalityName = "COMMUNITY 17"
                        },
                        new
                        {
                            LocalityId = 18,
                            LocalityInitial = "C18",
                            LocalityName = "COMMUNITY 18"
                        },
                        new
                        {
                            LocalityId = 19,
                            LocalityInitial = "C19",
                            LocalityName = "COMMUNITY 19"
                        },
                        new
                        {
                            LocalityId = 20,
                            LocalityInitial = "C20",
                            LocalityName = "COMMUNITY 20"
                        },
                        new
                        {
                            LocalityId = 21,
                            LocalityInitial = "C21",
                            LocalityName = "COMMUNITY 21"
                        },
                        new
                        {
                            LocalityId = 22,
                            LocalityInitial = "C22",
                            LocalityName = "COMMUNITY 22"
                        },
                        new
                        {
                            LocalityId = 23,
                            LocalityInitial = "C23",
                            LocalityName = "COMMUNITY 23"
                        },
                        new
                        {
                            LocalityId = 24,
                            LocalityInitial = "C24",
                            LocalityName = "COMMUNITY 24"
                        },
                        new
                        {
                            LocalityId = 25,
                            LocalityInitial = "C25",
                            LocalityName = "COMMUNITY 25"
                        },
                        new
                        {
                            LocalityId = 26,
                            LocalityInitial = "ASH",
                            LocalityName = "ASHIAMAN"
                        },
                        new
                        {
                            LocalityId = 27,
                            LocalityInitial = "AK",
                            LocalityName = "AGYEI KODJO"
                        },
                        new
                        {
                            LocalityId = 28,
                            LocalityInitial = "ZN",
                            LocalityName = "ZENU"
                        },
                        new
                        {
                            LocalityId = 29,
                            LocalityInitial = "SAK",
                            LocalityName = "SAKUMONO"
                        },
                        new
                        {
                            LocalityId = 30,
                            LocalityInitial = "KLNG",
                            LocalityName = "KLANGON"
                        },
                        new
                        {
                            LocalityId = 31,
                            LocalityInitial = "BT",
                            LocalityName = "BETHLEHEM"
                        },
                        new
                        {
                            LocalityId = 32,
                            LocalityInitial = "TB",
                            LocalityName = "TSUI BLEOO"
                        },
                        new
                        {
                            LocalityId = 33,
                            LocalityInitial = "TM",
                            LocalityName = "TEMA MANHEAN"
                        },
                        new
                        {
                            LocalityId = 34,
                            LocalityInitial = "HI",
                            LocalityName = "H/INDUSTRIAL MKT"
                        },
                        new
                        {
                            LocalityId = 35,
                            LocalityInitial = "KPN",
                            LocalityName = "KPONE"
                        },
                        new
                        {
                            LocalityId = 36,
                            LocalityInitial = "LASH",
                            LocalityName = "LASHIBI"
                        },
                        new
                        {
                            LocalityId = 37,
                            LocalityInitial = "TC",
                            LocalityName = "TOWN CENTER"
                        },
                        new
                        {
                            LocalityId = 38,
                            LocalityInitial = "VC",
                            LocalityName = "VERTICAL CENTER"
                        },
                        new
                        {
                            LocalityId = 39,
                            LocalityInitial = "LI",
                            LocalityName = "LIGHT INDUSTRIAL"
                        },
                        new
                        {
                            LocalityId = 40,
                            LocalityInitial = "IND",
                            LocalityName = "HEAVY INDUSTRIAL"
                        },
                        new
                        {
                            LocalityId = 41,
                            LocalityInitial = "HI/CMKT",
                            LocalityName = "KPONE CAR MKT"
                        },
                        new
                        {
                            LocalityId = 42,
                            LocalityInitial = "UA",
                            LocalityName = "UNKNOWN AREA"
                        },
                        new
                        {
                            LocalityId = 43,
                            LocalityInitial = "CH",
                            LocalityName = "CHINA TOWN"
                        },
                        new
                        {
                            LocalityId = 44,
                            LocalityInitial = "GC",
                            LocalityName = "GOLF CITY"
                        },
                        new
                        {
                            LocalityId = 45,
                            LocalityInitial = "MI",
                            LocalityName = "MOTORWAY INDUSTRIAL"
                        },
                        new
                        {
                            LocalityId = 46,
                            LocalityInitial = "SK",
                            LocalityName = "SAKI TOWN"
                        },
                        new
                        {
                            LocalityId = 47,
                            LocalityInitial = "BTM",
                            LocalityName = "BORTEYMAN"
                        },
                        new
                        {
                            LocalityId = 48,
                            LocalityInitial = "SBP",
                            LocalityName = "SEBREPOR"
                        },
                        new
                        {
                            LocalityId = 49,
                            LocalityInitial = "MTK",
                            LocalityName = "MLITSAKPO"
                        });
                });

            modelBuilder.Entity("PropertyRenumbering.Models.PlotSize", b =>
                {
                    b.Property<int>("PlotSizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlotSizeId"));

                    b.Property<string>("PlotSizes")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("PlotSizeId");

                    b.ToTable("PlotSizes");
                });

            modelBuilder.Entity("PropertyRenumbering.Models.PropertyDetails", b =>
                {
                    b.Property<string>("NewPropertyNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Acreage")
                        .HasColumnType("float");

                    b.Property<double>("Acreage2")
                        .HasColumnType("float");

                    b.Property<string>("BlockNumber")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DebtorType")
                        .HasColumnType("int");

                    b.Property<int>("GroupNumber")
                        .HasColumnType("int");

                    b.Property<int>("LandUseId")
                        .HasColumnType("int");

                    b.Property<int>("LandUseTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Lane")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LargeScale")
                        .HasColumnType("int");

                    b.Property<int>("LeasePeriodId")
                        .HasColumnType("int");

                    b.Property<int>("LocalityId")
                        .HasColumnType("int");

                    b.Property<float>("MonthlyRent")
                        .HasColumnType("real");

                    b.Property<string>("Neighbourhood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldPropertyNumber")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("PlotNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("PlotSizeId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyHeightId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropertyId"));

                    b.Property<int>("PropertyTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("RightOfEntry")
                        .HasColumnType("date");

                    b.Property<float>("SellingPrice")
                        .HasColumnType("real");

                    b.Property<int>("UnitsOccupied")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NewPropertyNumber");

                    b.HasIndex("LocalityId");

                    b.ToTable("PropertyDetails");
                });

            modelBuilder.Entity("PropertyRenumbering.Models.PropertyRegistration", b =>
                {
                    b.Property<string>("NewPropertyNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AllocationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BlockNumber")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("LandUseId")
                        .HasColumnType("int");

                    b.Property<int>("LandUseTypeId")
                        .HasColumnType("int");

                    b.Property<int>("LocalityId")
                        .HasColumnType("int");

                    b.Property<string>("OldPropertyNumber")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("PlotNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("PropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropertyId"));

                    b.Property<int>("PropertyTypeId")
                        .HasColumnType("int");

                    b.HasKey("NewPropertyNumber");

                    b.ToTable("PropertyRegistration");
                });

            modelBuilder.Entity("PropertyRenumbering.Models.PropertyType", b =>
                {
                    b.Property<int>("PropertyTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropertyTypeId"));

                    b.Property<string>("PropertyTypes")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PropertyTypeId");

                    b.HasIndex("PropertyTypes")
                        .IsUnique();

                    b.ToTable("PropertyTypes");

                    b.HasData(
                        new
                        {
                            PropertyTypeId = 1,
                            PropertyTypes = "SERVICED PLOT"
                        },
                        new
                        {
                            PropertyTypeId = 2,
                            PropertyTypes = "PARTIALLY SERVICED PLOT"
                        },
                        new
                        {
                            PropertyTypeId = 3,
                            PropertyTypes = "UNSERVICED PLOT"
                        },
                        new
                        {
                            PropertyTypeId = 4,
                            PropertyTypes = "H.O.S HOUSE"
                        },
                        new
                        {
                            PropertyTypeId = 5,
                            PropertyTypes = "SHOPS/OFFICES"
                        },
                        new
                        {
                            PropertyTypeId = 6,
                            PropertyTypes = "RENTAL HOUSE"
                        },
                        new
                        {
                            PropertyTypeId = 7,
                            PropertyTypes = "APARTMENTS"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PropertyRenumbering.Models.LandUseType", b =>
                {
                    b.HasOne("PropertyRenumbering.Models.LandUse", "LandUse")
                        .WithMany("LandUseTypes")
                        .HasForeignKey("LandUseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LandUse");
                });

            modelBuilder.Entity("PropertyRenumbering.Models.PropertyDetails", b =>
                {
                    b.HasOne("PropertyRenumbering.Models.Locality", "locality")
                        .WithMany()
                        .HasForeignKey("LocalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("locality");
                });

            modelBuilder.Entity("PropertyRenumbering.Models.LandUse", b =>
                {
                    b.Navigation("LandUseTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
